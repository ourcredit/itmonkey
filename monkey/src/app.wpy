<style lang="css">
  @import "/zanui/helper.wxss";
  .container {
    background: #f9f9f9;
    overflow: hidden;
    min-height: 100vh;
    box-sizing: border-box;
    padding: 15px 0;
  }

  .container::before {
    position: fixed;
    top: 0;
    left: 0;
    content: " ";
    width: 100%;
    height: 1rpx;
    background-color: #e2e2e2;
    z-index: 5;
  }

  .doc-title {
    position: relative;
    padding: 15px 0;
    margin: 10px 15px;
    line-height: 25px;
    font-size: 25px;
    color: #666;
  }

  .doc-description {
    margin: 14px 0;
    padding: 0 15px;
    font-size: 14px;
    line-height: 20px;
    color: #666;
  }

</style>

<script>
  import wepy from "wepy"
  import "wepy-async-function"
  import api from "api/api";

  // redux配置使用
  import {
    setStore
  } from "wepy-redux";
  import configStore from "./store";
  const store = configStore();
  setStore(store);
  export default class extends wepy.app {
    config = {
      pages: [
        "pages/dash/index",
        "pages/dash/task",
        "pages/dash/create",
        "pages/dash/jobdetail",

        "pages/store/index",

        "pages/work/index",
        "pages/work/chat",

        "pages/my/index",
        "pages/my/register",
        "pages/my/rules",
        "pages/my/experience",
        "pages/my/experiencedetail",
        "pages/my/myjobs",
        "pages/my/joinjobs",
        "pages/my/vilidate",
        "pages/my/message",
        "pages/my/orders",

        "pages/orders/payfor",
        "pages/orders/payinfo",


        "example/dashboard",
        "example/actionsheet",
        "example/btn",
        "example/badge",
        "example/capsule",
        "example/card",
        "example/cell",
        "example/dialog",
        "example/field",
        "example/helper",
        "example/icon",
        "example/layout",
        "example/loadmore",
        "example/noticebar",
        "example/panel",
        "example/popup",
        "example/select",
        "example/stepper",
        "example/steps",
        "example/switch",
        "example/tab",
        "example/tag",
        "example/toptips",
        "example/toast"
      ],
      window: {
        // 导航栏标题文字内容
        navigationBarTitleText: "猿人超市",
        // 导航栏标题颜色，仅支持 black/white
        navigationBarTextStyle: "white",
        navigationBarBackgroundColor: "#049BFF",
        // 窗口的背景色
        backgroundColor: "#eaeaea",
        //下拉背景字体、loading 图的样式，仅支持 dark/light
        backgroundTextStyle: "light",
        // 是否开启下拉刷新，详见页面相关事件处理函数
        enablePullDownRefresh: true
        // 页面上拉触底事件触发时距页面底部距离，单位为px
        // onReachBottomDistance: 50
      },
      //     当设置 position 为 top 时，将不会显示 icon
      //    tabBar 中的 list 是一个数组，只能配置最少2个、最多5个 tab，tab 按数组的顺序排序。
      tabBar: {
        // tab 上的文字默认颜色
        color: "#000000",
        // tab 上的文字选中时的颜色
        selectedColor: "#049BFF",
        // tab 的背景色
        backgroundColor: "#fff",
        // tabbar上边框的颜色， 仅支持 black/white
        borderStyle: "white",
        // 可选值 bottom、top
        // tab 的列表，详见 list 属性说明，最少2个、最多5个 tab,
        list: [{
            pagePath: "pages/dash/index",
            selectedIconPath: "./images/tabbars/icon-mark-active@2x.png",
            iconPath: "./images/tabbars/icon-mark@2x.png",
            text: "悬赏大厅"
          },
          {
            pagePath: "pages/store/index",
            selectedIconPath: "./images/tabbars/icon-shelf-active@2x.png",
            iconPath: "./images/tabbars/icon-shelf@2x.png",
            text: "猿人商城"
          },
          {
            pagePath: "pages/work/index",
            selectedIconPath: "./images/tabbars/icon-shelf-active@2x.png",
            iconPath: "./images/tabbars/icon-shelf@2x.png",
            text: "我的家族"
          },
          {
            pagePath: "pages/my/index",
            selectedIconPath: "./images/tabbars/icon-smile-active@2x.png",
            iconPath: "./images/tabbars/icon-smile@2x.png",
            text: "个人信息"
          },
          {
            pagePath: "example/dashboard",
            selectedIconPath: "./images/tabbars/icon-smile-active@2x.png",
            iconPath: "./images/tabbars/icon-smile@2x.png",
            text: "示例"
          }
        ]
      },
      // 可以设置各种网络请求的超时时间。
      networkTimeout: {
        // wx.request的超时时间，单位毫秒，默认为：60000
        request: 60000,
        // wx.connectSocket的超时时间，单位毫秒，默认为：60000
        connectSocket: 60000,
        // wx.uploadFile的超时时间，单位毫秒，默认为：60000
        uploadFile: 60000,
        // wx.downloadFile的超时时间，单位毫秒，默认为：60000
        downloadFile: 60000
      },
      debug: true
    }

    constructor() {
      super()
      this.use("requestfix");
      this.use("promisify");
    }
    onLaunch() {
      // this.getUserInfo();
    }
    async getUserInfo(p) {
      const that = this;
      const t = await wepy.login();
      const params = {
        code: t.code,
        encryptedData: p.detail.encryptedData,
        iv: p.detail.iv,
        rawData: JSON.stringify(JSON.parse(p.detail.rawData)),
        signature: p.detail.signature
      };
      var res = await api.GetAuthInfo(params);
      if (res.success) {
        if (!res.result.name) {
          res.result.name = p.detail.userInfo.name;
        }
        if (!res.result.avatarUrl) {
          res.result.avatarUrl = p.detail.userInfo.avatarUrl;
        }
        store.dispatch({
          type: "UPDATE",
          model: res.result
        });
        store.dispatch({
          type: "REGISTER",
          model: res.result.hasRegister
        });
      } else {
        store.dispatch({
          type: "UPDATE",
          model: p.detail.userInfo
        });
        store.dispatch({
          type: "REGISTER",
          model: false
        });
      }
    }
  }

</script>

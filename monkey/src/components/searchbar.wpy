<style lang="less">
.mylist:odd {
  color: red;
}

.mylist:even {
  color: green;
}
</style>
<template>
  <!-- 搜索框 -->
    <view class="weui-search-bar">
      <view class="weui-search-bar__form">
        <view class="weui-search-bar__box">
          <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
          <input type="text" class="weui-search-bar__input" placeholder="搜索"
           value="{{inputVal}}" focus="{{inputShowed}}" bindinput="inputTyping"
          />
          <view class="weui-icon-clear" wx:if="{{inputVal.length > 0}}" @tap="clearInput">
            <icon type="clear" size="14"></icon>
          </view>
        </view>
        <label class="weui-search-bar__label" hidden="{{inputShowed}}" @tap="showInput">
          <icon class="weui-icon-search" type="search" size="14"></icon>
          <view class="weui-search-bar__text">搜索</view>
        </label>
      </view>
       <view class="weui-search-bar__cancel-btn"  wx:if="{{inputVal.length > 0}}" @tap="search">搜索</view>
      <view class="weui-search-bar__cancel-btn">
         <slot name="action"></slot></view>
    </view>
    <view class="weui-cells searchbar-result" wx:if="{{result.length > 0}}">
      <view wx:for="{{result}}" wx:key="index"  class="weui-cell" hover-class="weui-cell_active">
        <view class="weui-cell__bd">
          <view>{{item.name}}</view>
         <slot name="go"></slot>
        </view>
      </view>

    </view>
</template>
<script>
import wepy from 'wepy';

export default class SearchBar extends wepy.component {
  data = {
    inputShowed: false,
    inputVal: '',
    result: []
  };
  props = {
    searchApi: {
      type: Function,
      required: true
    },
    params: {
      type: Object,
      required: false,
      default: {}
    }
  };
  watch = {
    inputVal(n, o) {
      if (n == '') {
        this.result = [];
      }
    }
  };
  methods = {
    async search() {
      var params = Object.assign(this.params, { filter: this.inputVal });
      var result = await this.searchApi(params);
      this.result = result.result.items;
      this.$apply();
    },
    inputTyping(e) {
      this.inputVal = e.detail.value;
    },
    hideInput() {
      this.inputVal = '';
      this.inputShowed = false;
    },
    showInput() {
      this.inputShowed = true;
    },
    clearInput() {
      this.inputVal = '';
    }
  };

  onLoad() {}
}
</script>

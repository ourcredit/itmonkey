<style lang="less">
.mylist:odd {
  color: red;
}

.mylist:even {
  color: green;
}
</style>
<template>
  <!--  按钮 -->
  <view wx:if="{{hasAction}}" class="weui-flex">
    <view class="weui-flex__item">
      <view @tap="change('time')" class="placeholder">发布时间</view>
    </view>
    <view class="weui-flex__item">
      <view @tap="change('price')" class="placeholder">任务金额</view>
    </view>
    <view class="weui-flex__item">
      <view @tap="change('cate')" class="placeholder">任务分类</view>
    </view>
  </view>
  <!-- list -->
  <scroll-view class="list" style="height:{{height}}rpx" scroll-y="true" bindscrolltolower="loadMore">
    <view wx:for="{{list}}" wx:key="index" class="panel">
      <slot name="go">
      </slot>
      <view class="weui-flex">
        <view class="weui-flex__item">
          <view class="placeholder">
            <view class="title">{{item.category}} :{{item.name}}</view>
          </view>
        </view>
        <view class="weui-flex__item">
          <view class="price">
            <icon type="success" size="23"></icon>{{item.price}}</view>
        </view>
      </view>
      <view class="weui-flex">
        <view class="weui-flex__item">
          <view class="info">{{item.content}}</view>
        </view>
        <view class="price">
          <icon type="success" size="23"></icon>{{item.state}}</view>
      </view>
    </view>
  </scroll-view>
</template>
<script>
import wepy from 'wepy';

export default class List extends wepy.component {
  props = {
    searchApi: {
      type: Function,
      required: true
    },
    hasAction: {
      type: Boolean,
      default: true
    },
    params: {
      type: Object,
      required: false,
      default: {}
    }
  };
  data = {
    list: [],
    total: 0,
    index: 1,
    height: 1208,
    sort: 'creationTime'
  };
  methods = {
    async change(type) {
      this.sort = type;
      this.params.skipCount = 0;
      this.params.maxResultCount = 10;
      var result = await this.search();
      this.gender(result, true);
    },
    async loadMore() {
      this.index++;
      this.params.skipCount = (this.index - 1) * this.params.maxResultCount;
      if (this.total == 0 || this.total > this.params.skipCount) {
        var result = await this.search();
        this.gender(result);
      }
    }
  };
  async search() {
    var params = Object.assign(this.params, {
      sort: this.sort
    });
    var result = await this.searchApi(params);
    return result.result;
  }
  gender(result, init = false) {
    if (init) {
      this.list = result.items;
    } else {
      this.list.push(...result.items);
    }
    this.total = result.totalCount;
    this.$apply();
  }
  async onLoad() {
    var result = await this.search();
    this.gender(result, true);
  }
}
</script>

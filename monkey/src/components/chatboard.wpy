<style lang="scss">
$fontcolor: #7b7b7b;
$activecolor: #13b113;
.chartboard {
  background-color: #ededed;
  padding-bottom: 120rpx;
  &.fixed {
    position: fixed;
    left: 0;
    right: 0;
    overflow-y: scroll;
  }
  .msgarea {
    padding: 20rpx 10rpx;
    .clearfix:after {
      content: '.';
      display: block;
      height: 0;
      clear: both;
      visibility: hidden;
    }
    .clearfix {
      height: 1%;
    }
    .msg {
      border: 1px solid #d8d8d8;
      font-size: 32rpx;
      display: inline-block;
      padding: 14rpx 20rpx;
      max-width: 450rpx;
      border-radius: 15rpx;
    }
    .icon {
      width: 70rpx;
      height: 70rpx;
    }
    &.fromme {
      .msg {
        background-color: #9fe757;
        float: right;
        margin-right: 10rpx;
      }
      .icon {
        float: right;
        margin-right: 10rpx;
      }
    }
    &.other {
      .msg {
        background-color: #fff;
        float: left;
        margin-left: 10rpx;
      }
      .icon {
        float: left;
        margin-left: 10rpx;
      }
    }
  }
}

.input {
  color: $fontcolor;
  position: fixed;
  bottom: 0;
  height: 100rpx;
  width: 100%;
  border-top: 1px solid #d8d8d8;
  background-color: #ededed;
  font-size: 22rpx;
  .input_layout {
    position: relative;
    .input_icon {
      position: absolute;
      width: 90rpx;
      height: 90rpx;
      &.voice {
        left: 20rpx;
      }
      &.face {
        right: 120rpx;
      }
      &.plus {
        right: 20rpx;
      }
    }
    .input_text {
      border-bottom: 1px solid #d8d8d8;
      margin-left: 120rpx;
      margin-right: 240rpx;
      height: 80rpx;
      font-size: 32rpx;
      color: #000;
      &.focus {
        border-bottom: 1px solid #9bb793;
      }
    }
    .send {
      background-color: #14b012;
      display: inline-block;
      box-sizing: border-box;
      position: absolute;
      border: 1px solid #378c37;
      border-radius: 5rpx;
      right: 20rpx;
      width: 90rpx;
      height: 74rpx;
      line-height: 72rpx;
      color: white;
      text-align: center;
      font-size: 30rpx;
      margin-top: 8rpx;
      &.hidden {
        display: none;
      }
    }
  }
}
</style>
<template>
    <scroll-view scroll-y="1" class="chartboard{{focus ? ' fixed' : ''}}">
        <block wx:for="{{message}}" wx:key="index" wx:for-index="index" wx:for-item="item">
            <view class="msgarea{{item.from === 'me' ? ' fromme' : ' other'}}">
                <image class="icon" src="{{item.icon}}"></image>
                <view class="msg">{{item.content}}</view>
                <view class="clearfix"></view>
            </view>
        </block>
    </scroll-view>
       <view class="input">
        <view class="input_layout">
            <image class="input_icon voice" src="../images/voice.png"></image>
            <image class="input_icon face" src="../images/face.png"></image>
            <image class="input_icon plus" src="../images/plus.png"></image>
            <view class="send{{readyToSend.length == 0 ? ' hidden' : ''}}" @tap="send">发送</view>
            <input @input="input" value="{{readyToSend}}" class="input_text{{focusFlag ? ' focusFlag' : ''}}" @focus="focus" @blur="blur" @type="input"></input>
        </view>
    </view>
</template>
<script>
import wepy from 'wepy';
export default class Chartboard extends wepy.component {
  data = {
    message: [
      {
        from: 'aaaa',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      },
      {
        from: 'aa',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      },
      {
        from: 'aaaa',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      },
      {
        from: 'aa',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      },
      {
        from: 'me',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      },
      {
        from: 'me',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      },
      {
        from: 'me',
        icon: '../../images/logo.png',
        content: 'aaaaa'
      }
    ],
    focus: false
  };

  methods = {};

  onLoad() {}

  fixPosition(focus) {
    this.focus = focus;
    this.$apply();
  }
}
</script>

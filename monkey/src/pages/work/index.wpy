<style lang="less">
.searchbar-result {
  margin-top: 0;
  font-size: 14px;
}

.searchbar-result:before {
  display: none;
}

.weui-cell {
  padding: 12px 15px 12px 35px;
}

.placeholder {
  margin: 5px;
  padding: 0 10px;
  text-align: center;
  height: 2em;
  line-height: 2em;
  color: #00ff00;
}
</style>
<template>
  <view class="container">
    <view wx:for="{{contents}}" wx:key="index">
      {{item.SenderId}} => {{item.ReceiverId}} : {{item.Content}}
    </view>

<form bindsubmit="submit">
 <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">内容</view>
      </view>
      <view class="weui-cell__bd">
        <input name="content" class="weui-input" value="{{body.content}}" placeholder="请输入内容" />
      </view>
    </view>
    <button formType="submit" class="weui-btn mini-btn" size="mini" type="default">发送</button>
     <button @tap="connect" class="weui-btn mini-btn" size="mini" type="default">链接</button>
</form>

  </view>
</template>

<script>
import wepy from 'wepy';
import Chat from '../../mixins/socket';
export default class Dash extends wepy.page {
  data = {
    chat: null,
    contents: [],
    socketOpened: false,
    socketMsgQueue: [],
    body: {
      senderId: 1,
      receiverId: 2,
      type: 'text',
      content: ''
    }
  };

  computed = {
    now() {
      return +new Date();
    }
  };
  // 方法
  methods = {
    submit(e) {
      debugger;
      this.body.content = e.detail.value.content;
      this.sendSocketMessage(this.body);
    }
  };
  sendSocketMessage(msg) {
    if (typeof msg === 'object') {
      // 只能发送string
      msg = JSON.stringify(msg);
    }
    if (this.socketOpened) {
      // socketOpened变量在wx.onSocketOpen时设置为true
      wx.sendSocketMessage({
        data: msg
      });
    } else {
      // 发送的时候，链接还没建立
      this.socketMsgQueue.push(msg);
    }
  }
  events = {
    'index-emit': (...args) => {
      let $event = args[args.length - 1];
      console.log(
        `${this.$name} receive ${$event.name} from ${$event.source.$name}`
      );
    }
  };
  connect() {
    var props = {
      url: 'wss://monkey.leftins.com/ws?guid=' + 1,
      // url: 'wss://monkey.leftins.com/ws',
      header: {
        'content-type': 'application/json'
      },
      //  protocols: ['protocol1'],
      method: 'GET'
    };
    wx.connectSocket(
      props,
      function(r) {
        console.log(r);
      },
      function(e) {
        console.log(e);
      }
    );
  }
  // 加载函数
  async onLoad() {
    var _self = this;
    this.connect();
    wx.onSocketOpen(
      function(r) {
        _self.socketOpened = true;
        console.log('socket 开启成功');
        for (var i = 0; i < _self.socketMsgQueue.length; i++) {
          _self.sendSocketMessage(_self.socketMsgQueue[i]);
        }
      },
      function(e) {}
    );
    // wx.onSocketMessage(function(r) {
    //   console.log(r);
    //   console.log(_self.contents);
    //   _self.contents.push(r.data);
    // });
    wx.onSocketMessage(function(res) {
      var json = JSON.parse(res.data);
      _self.contents.push(json);
      _self.$apply();
    });
    wx.onSocketClose(function(res) {
      console.log(res);
      console.log('WebSocket 已关闭！');
    });
  }
}
</script>
